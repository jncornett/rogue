name: CI
run-name: CI - ${{ github.event_name }} - ${{ github.ref }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        target: [release]
        runner: [macos-latest]
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
      - name: Run build in "${{ matrix.target }}" mode
        run: cargo build --profile ${{ matrix.target }}

  test:
    runs-on: ${{ matrix.runner }}
    needs: [build]
    strategy:
      matrix:
        target: [release]
        runner: [macos-latest]
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          readonly-cache: true
      - name: Run tests in "${{ matrix.target }}" mode
        run: cargo test --profile ${{ matrix.target }}

  lint:
    runs-on: ${{ matrix.runner }}
    needs: [build]
    env:
      CARGO_TERM_COLOR: always
    strategy:
      matrix:
        runner: [macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key-suffix: clippy 
      - name: Install Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matchers/clippy-short.json"
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features --message-format=short --no-deps

  fmt:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
