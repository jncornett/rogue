name: CI
run-name: CI - ${{ github.event_name }} - ${{ github.ref }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        target: [release]
        runner: [macos-latest]
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
            ${{ runner.os }}-cargo-
      - if: matrix.runner == 'ubuntu-latest'
        name: Install Linux dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run build in "${{ matrix.target }}" mode
        run: cargo build --profile ${{ matrix.target }}

  test:
    runs-on: ${{ matrix.runner }}
    needs: [build]
    strategy:
      matrix:
        target: [release]
        runner: [macos-latest]
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
            ${{ runner.os }}-cargo-
      - if: matrix.runner == 'ubuntu-latest'
        name: Install Linux dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run tests in "${{ matrix.target }}" mode
        run: cargo test --profile ${{ matrix.target }}

  lint:
    runs-on: ${{ matrix.runner }}
    needs: [build]
    env:
      CARGO_TERM_COLOR: always
    strategy:
      matrix:
        runner: [macos-latest]

    steps:
      - uses: actions/checkout@v5
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lint-
            ${{ runner.os }}-cargo-
      - if: matrix.runner == 'ubuntu-latest'
        name: Install Linux dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Install Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matchers/clippy-short.json"
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features --message-format=short --no-deps

  fmt:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
